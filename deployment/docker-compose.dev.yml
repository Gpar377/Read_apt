version: '3.8'

services:
  # Development Backend
  backend-dev:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
      target: development
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./dev.db
      - REDIS_URL=redis://redis:6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEBUG=true
    volumes:
      - ../backend:/app
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - dev-network

  # Development Frontend
  frontend-dev:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NODE_ENV=development
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - backend-dev
    restart: unless-stopped
    networks:
      - dev-network

  # Redis for development
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    networks:
      - dev-network

  # Development database viewer
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    networks:
      - dev-network

volumes:
  redis_dev_data:

networks:
  dev-network:
    driver: bridge